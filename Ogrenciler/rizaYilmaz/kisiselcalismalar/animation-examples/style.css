/* 
Temel anlamda animasyon, aşağıdaki kod bloğundaki gibi oluşturuluyor.
@keyframes animasyon_adi {

  keyframe {
    property : value;
  }

}
@keyframes: Animasyon tanımlarken @keyframes tanımlaması ile başlıyoruz.

animasyon_adı: Burada animasyonun adını tanımlıyoruz. Herhangi bir element üzerinde, oluşturacağımız animasyonu kullanmak istediğimizde bu tanımladığımız ismi kullanacağız.

keyframe: Burada başlangıç ve bitiş noktalarını daha doğrusu animasyonun hangi karede ne yapacağını belirtiyoruz.

property, value: Burada da animasyonun özellik ve değerlerini tanımlıyoruz.
*/
*{
    margin: 0;
    padding: 0;
}

.example-1{
    width: 100px;
    height: 100px;
    background: red;
    position: relative;
    animation-name: example-1;
    /* Animasyonun ne kadar süreceğini belirlediğimiz komut */
    animation-duration: 3s;   
    /* Animasyonun sayfa yenilendikten sonra kaç saniye bekleyip başlayacağını belirlediğimiz komut */
    animation-delay: 2s;
    /* Animasyon bittikten sonra ne olacağını belirlediğimiz komut */
    animation-fill-mode: backwards;
}
@keyframes example-1 {
    from {top: 0px; background-color: yellow;}
    to {top: 200px;}
  }
.example-2{
    width: 100px;
    height: 100px;
    background-color: red;
    position: relative;
    animation-name: example-2;
    animation-duration: 5s;
    /* 
    Animasyonun hız eğrisini belirler.
    -linear =>Animasyon başlangıçtana bitişe kadar aynı hızda oynar.	
    -ease =>Varsayılan değerdir. Animasyon yavaş başlar, hızlanır ve yine yavaş biter.	
    -ease-in =>Animasyon yavaş başlar.	
    -ease-out =>Animasyon yavaş biter.	
    -ease-in-out =>Animasyon yavaşlar başlar, yavaş biter.	
    -step-start =>steps(1, start) değerine eşittir	
    -step-end =>steps(1, end) değerine eşittir	
    -steps(sayı, start | end) =>Adımlı olarak animasyonu çalıştırır, animasyon akmaz belirlenen sayıya göre bölerek çalışır.	
    -cubic-bezier(n,n,n,n) =>Özel hız eğrisi oluşturmak için kullanılır
    */
    animation-timing-function: linear;
    animation-delay: 2s;
    /* Animasyonun kaç defa oynatılacağını belirlediğimiz komut. infinite => Sonsuz kez oynatır */
    animation-iteration-count: infinite;
    /* 
    Animasyonun oynatılacağı yönü belirlemek için kullanılır.
    -normal =>Animasyon olması gerektiği gibi ilerler.
    -reverse =>Animasyon son kareden başlar ve ilk karede sonlanır.
    -alternate =>Animasyon ilk kareden başlar, son kareye geldiğinde bu sefer tam tersine son kareden başlar  ve tekrar ilk karede biter.
    -alternate-reverse =>Animasyon son kareden başlar, ilk kareye geldiğinde bu sefer tam tersine ilk kareden başlar ve son karede biter.
    */
    animation-direction: alternate;
}
@keyframes example-2 {
    0%   {background-color:red; left:0px; top:0px;}
    25%  {background-color:yellow; left:200px; top:0px;}
    50%  {background-color:blue; left:200px; top:200px;}
    75%  {background-color:green; left:0px; top:200px;}
    100% {background-color:red; left:0px; top:0px;}
}
.example-3{
    width: 100px;
    height: 50px;
    background-color: red;
    font-weight: bold;
    position: relative;
    animation: mymove 5s infinite;
    animation-timing-function: linear;
}
.example-4{
    width: 100px;
    height: 50px;
    background-color: red;
    font-weight: bold;
    position: relative;
    animation: mymove 5s infinite;
    animation-timing-function: ease;
}
.example-5{
    width: 100px;
    height: 50px;
    background-color: red;
    font-weight: bold;
    position: relative;
    animation: mymove 5s infinite;
    animation-timing-function: ease-in;
}
.example-6{
    width: 100px;
    height: 50px;
    background-color: red;
    font-weight: bold;
    position: relative;
    animation: mymove 5s infinite;
    animation-timing-function: ease-out;
}
.example-7{
    width: 100px;
    height: 50px;
    background-color: red;
    font-weight: bold;
    position: relative;
    animation: mymove 5s infinite;
    animation-timing-function: ease-in-out;
}
@keyframes mymove {
    from {left: 0px;}
    to {left: 300px;}
  }
